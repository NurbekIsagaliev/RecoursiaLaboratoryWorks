<?php

/*
Написать функцию, которая считает сколько цифр в числе.
*/
$n = 123456;
// echo howMuch($n); // [6]
function howMuch($number, $counter = 0) // 123456, 0 // 12345, 1 // 1234, 2 // 123, 3 // 12, 4 // 1, 5 // 0, 6
{
    $digit = $number % 10; // 6 // 5 // 4 // 3 // 2 // 1 // 0
    if ($number < 1) { // 123456 < 1 // 12345 < 1
        return $counter; // 6
    } else {
        return howMuch(intdiv($number, 10), $counter + 1); // 12345, 1 [6]// 1234, 2 [6]// 123, 3 [6]// 12, 4 [6]// 1, 5 [6]// 0, 6 [6]
    }
}

/*
Написать функцию, которая принимает на вход число и 
возвращает максимальную цифру в этом числе.
*/
$n = 7295423;
// echo getMax($n);
function getMax($number, $max = 0) // 7295423, 0 // 729542, 3 // 72954, 3 // 7295, 4 // 729, 5 // 72, 9 // 7, 9 // 0, 9
{
    $digit = $number % 10; // 3 // 2 // 4 // 5 // 9 // 2 // 7 // 0
    if ($digit > $max) {
        $max = $digit; // 3 // 4 // 5 // 9 
    }
    if ($number < 1) {
        return $max; // 9
    } else {
        return getMax(intdiv($number, 10), $max); // 729542, 3 // 72954, 3 // 7295, 4 // 729, 5 // 72, 9 // 7, 9 // 0, 9
    }
}

/*
Написать функцию, которая принимает на вход число и возвращает число, являющееся его зеркальным отражением.
12345
54321
12345
0.5
0.04
0.003
0.0002
0.00001
0.54321
Дома сделать расшифровку!!!!!

1)  getMirror(12345, $k = 1): 
    
    $digit = (12345 % 10) / pow(10, 1) = 5 / 10 = 0.5;
    
     if (12345 < 1) {
        return $digit; 
    } else {
         $counter = 0;
          if ($k == 1) {
                $i = $number;
                if($i > 1){
                 
                     $counter++;

                }
                 $i = $i / 10 ;
            }
        }
return (0.5 + getMirror(1234, 2)) * pow(10, 5) = (0.5 + getMirror(1234,2 ))*100 000;
    }

2) getMirror(1234, $k = 2 ):

   $digit = (1234 % 10) / pow(10, 2) = 4 / 100 = 0.04;
     
     if (1234 < 1) {
        return $digit; 
    } else {
         $counter = 0;
return (0.04 + getMirror(123, 3)) * pow(10, 0) = (0.04 +  getMirror(123, 3)) *1;
    }

3)  getMirror(123, $k = 3 ):

    $digit = (123 % 10) / pow(10,3) = 3 / 1000 = 0.003;

      if (123 < 1) {
        return $digit; 
    } else {
         $counter = 0;
return (0.003 + getMirror(12,  4)) * pow(10, 0) = (0.003 + getMirror(12,  4)) * 1;
    }     

4)  getMirror(12, $k = 4 ):
    
    $digit = (12 % 10) / pow(10,4) = 2 / 10 000 = 0.0002;

     if (12 < 1) {
        return $digit; 
    } else {
         $counter = 0;
return (0.0002 + getMirror(1, 5)) * pow(10, 0) = (0.0002 + getMirror(1, 5))*1;

    }
5)  getMirror(1, $k = 5 ):
    
    $digit = (1 % 10) / pow(10,5) = 1 / 100 000 = 0.00001;
     
    if (1 < 1) {
        return $digit; 
    } else {
         $counter = 0;
       return (0.00001 + getMirror(0, 6)) * pow(10, 0) = (0.00001 + getMirror(0,6)) *1;   
    }

6)  getMirror(0, $k = 6):
    
    $digit = (0 % 10) / pow(10,6) = 0 / 1000 000 = 0;
    
    if (0 < 1) {
        return $digit = return 0 = 0; 
    }

return (0.5 + getMirror(1234, 2)) * pow(10, 5) = (0.5 + getMirror(1234,2 ))*100 000 =

(0.5 +(0.04 +  getMirror(123, 3)))*100 000 =

(0.5 +(0.04 + (0.003 + getMirror(12,  4)) ))*100 000 =

(0.5 +(0.04 + (0.003 + (0.0002 + getMirror(1, 5)) ) ))*100 000 = 

(0.5 +(0.04 + (0.003 + (0.0002 + (0.00001 + getMirror(0, 6))) ) ))*100 000 =

(0.5 +(0.04 + (0.003 + (0.0002 + (0.00001 + 0)) ) ))*100 000 = 

------------------------------------------------------------------------------

(0.5 +(0.04 + (0.003 + (0.0002 + 0.00001) ) ))*100 000 =

(0.5 +(0.04 + (0.003 + 0.00021 ) ))*100 000 =

(0.5 +(0.04 + 0.00321  ))*100 000 =

(0.5 + 0.04321 )*100 000 =

(0.54321)*100 000 = 54321;


*/
$n = 12345;
echo 'Number = ' . $n . '<br>';
echo 'Mirror number = ' . getMirror($n) . '<br>'; // 0.54321 
function getMirror($number, $k = 1) // 12345, 1 // 1234, 2 // 123, 3 // 12, 4 // 1, 5 // 0, 6
{
    $digit = ($number % 10) / pow(10, $k); // 0.5 // 0.04 // 0.003 // 0.0002 // 0.00001 // 0
    // echo $digit . '<br>';
    if ($number < 1) {
        return $digit; // 0
    } else {
        $counter = 0;
        if ($k == 1) {
            for ($i = $number; $i > 1; $i = $i / 10) {
                $counter++;
            }
        }
        return ($digit + getMirror(intdiv($number, 10), $k + 1)) * pow(10, $counter); // 0.5 + (1234, 2) // 0.04 + (123, 3) 
        // 0.003 + (12, 4) // 0.0002 + (1, 5) // 0.00001 + (0, 6)
        // 0.5 + 0.04321 // 0.04 + 0.00321 // 0.003 + 0.00021 // 0.0002 + 0.00001 // 0.00001 + 0
    }
}

echo 'Task4<br>';

/*4) Написать функцию которая  принимает на  вход  число и возвращает массив
состоящий  из двух массивов,в первом  только  четные  цифры  во  втором  нечетные 
 */



$number = 11104450;

function task4( $number, $arr = [[], []] )
{
$digit = $number % 10;

    if (  intdiv($number, 10)  ==  0 && $number % 10 == 0) {

        return $arr;

    } elseif ( $digit % 2 == 0 ) {

        $arr[0][] = $digit;

    } else {

        $arr[1][] = $digit;
    }

    return task4( intdiv($number, 10), $arr );
}



print_r(task4($number));

